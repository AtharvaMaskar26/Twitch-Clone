datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id String @id @default(uuid()) // Created everytime an account is created
  username String @unique // Populated by Clerk
  imageUrl String @db.Text // Populated by Clerk
  externalUserId String @unique // Id that clerk uses
  bio String? @db.Text // Not clerk's it is our thing

  following Follow[] @relation("Following")
  followedBy Follow[] @relation("FollowedBy")

  blocking Block[] @relation("Blocking")
  blockedBy Block[] @relation("BlockedBy")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Adding the follow feture
model Follow {
  id String @id @default(uuid()) 
  followerId String
  followingId String

  // This creates a relation between the user and the follower. If the user deletes the account this relation gets deleted as well
  follower User @relation(name: "Following", fields: [followerId], references: [id], onDelete: Cascade)

  following User @relation(name: "FollowedBy", fields: [followingId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([followerId, followingId])
  @@index([followerId])
  @@index([followingId])
}

model Block {
  id String @id @default(uuid())
  blockerId String
  blockedId String

  blocker User @relation(name: "Blocking", fields: [blockerId], references: [id], onDelete: Cascade)
  blocked User @relation(name: "BlockedBy", fields: [blockedId], references: [id], onDelete: Cascade)

  @@unique([blockerId, blockedId])
  @@index([blockerId])
  @@index([blockedId])
}