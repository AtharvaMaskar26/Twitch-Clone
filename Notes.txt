** Notes after 41.16

We cannot directly add functions to a component, we need to use server components for this. 
"use client", we convert the server component into the client component
next pages are by default server components 

We can use Clerk for authentication and only allow authenticated users to login

Why did we create [[...signup]]?

You can find a lot of open source logos from logodust

We use _folderName, to tell nextJs even if it has page.tsx file in it do not render it as a route

We have to use light and dark mode in our website, so the website name becomes white and sub title becomes brighter. For this we'll also need to re-design clerk components. for this we install:
npm i @clerk/themes


Now we need our actual application to be using dark mode. 
npm install next-themes

# Concept of hot reloading 
When we make some changes, the changes are reflected on your browser instantly. This is called hot reloading. In our db.ts file we don't want to create a new Prisma client with every reload. So we store the prisma in a global variable and only do in production. 

# Exposing Local host to the internet
We have to find a way to connect our localhost to the internet. While development we are going to use webhooks. In production we wont require tunelling because we will be having the url generated from vercel. 
But for local development we will be needing a url using NGROK. 

# Hydration error
As you know we have set collapse as false by default
So whenever we load our screen in mobile mode there is a small duration where there is mismatch in client side and server side rendering. 
This causes hydration error
If we set the collapse to true we will have error in desktop and not on mobile screen. To solve this you can add a small timer for a few seconds so the client and server hydrate

#[username]
- They square bracket tells that it is a dynamic url 
- You can access the params as a prop

** 
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_test_c3VwZXItZ29waGVyLTIuY2xlcmsuYWNjb3VudHMuZGV2JA

CLERK_SECRET_KEY=sk_test_vh9ncqD9L0bhHbGwIv6ffxVRuscxMydoUuaoOlDiyk

NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up
NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=/
NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=/

CLERK_WEBHOOK_SECRET = "whsec_cQ+KUw11ikBCpyuEqGB3IR/Ix4XCrRgl
"

DATABASE_URL='mysql://54dve1r8abk9as7rhn5s:pscale_pw_8SvJu3MONFG2EMgBr5D5XWR1UeqG55t3sA7EtNhDPhF@aws.connect.psdb.cloud/twitch-clone?sslaccept=strict'
# DATABASE_URL='mysql://60750qj6otratqf37xhn:pscale_pw_443rV32rfObsaiw5Jb6Mf9Afo1ZY8cj4w3NXsZh257j@aws.connect.psdb.cloud/twitch-clone?sslaccept=strict'
# mysql://54dve1r8abk9as7rhn5s:pscale_pw_8SvJu3MONFG2EMgBr5D5XWR1UeqG55t3sA7EtNhDPhF@aws.connect.psdb.cloud/twitch-clone?sslaccept=strict

# The following keys will be used privately
LIVEKIT_API_URL = "https://twitch-clone-52lcuyhv.livekit.cloud"
LIVEKIT_API_KEY = "API3vGScAP8Cm8z"
LIVEKIT_API_SECRET = "Xs8f9lNVEfxCY0rmI0UzMtl2NyLKXR5bxwwzwOHKfhQB"

# This we can use
NEXT_PUBLIC_LIVEKIT_WS_URL = "wss://twitch-clone-52lcuyhv.livekit.cloud"

# pscale_pw_8SvJu3MONFG2EMgBr5D5XWR1UeqG55t3sA7EtNhDPhF
**